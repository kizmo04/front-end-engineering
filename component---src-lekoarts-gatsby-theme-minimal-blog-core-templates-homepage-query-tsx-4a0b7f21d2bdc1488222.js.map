{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/homepage-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./src/utils/getPostsFromQuery.ts","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["ItemTags","tags","Fragment","map","tag","i","key","slug","sx","opacity","name","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","isMDXComponent","Homepage","posts","useMinimalBlogConfig","basePath","blogPath","mb","p","mt","variant","text","to","replaceSlashes","showTags","HomepageComponent","allPost","data","getPostsFromQuery","nodes","edges","node","postId","id","mdxPost","find","edge","author","parent","frontmatter","BlogListItem","post","title","a","date","Listing","className"],"mappings":"2FAAA,qCA4BeA,IAnBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAGlB,OACE,YAAC,IAAMC,SAAP,KACGD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,YAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GANU,IAOb,oBAAMG,GAAI,CACRC,QAAS,QAPD,IASQL,EAAIM,a,+CCXVA,E,iFAKhBC,GALgBD,EAKK,OALG,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,2EAC5B,oBAASE,KAIZG,EAAc,CAClBC,aAT0B,IAYb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGN,EACF,8BACD,OAAO,cALS,UAKT,iBAAeG,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAI5E,cAACR,EAAD,CAAMH,GAAI,CACRY,SAAU,CAAC,EAAG,EAAG,GACjBC,WAAY,OACZC,MAAO,WACNH,QAAQ,QAJX,UAOA,oDAKJF,EAAWM,gBAAiB,E,gECEbC,EAvBE,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,MAA2B,EACdC,cAAvBC,EADqC,EACrCA,SAAUC,EAD2B,EAC3BA,SAClB,OACE,YAAC,IAAD,KACE,uBACEpB,GAAI,CACFqB,GAAI,CAAC,EAAG,EAAG,GACXC,EAAG,CAAEV,SAAU,CAAC,EAAG,EAAG,GAAIW,GAAI,GAC9BC,QAAS,iBAGX,YAAC,EAAD,OAEF,YAAC,IAAD,CAAOC,KAAK,QACV,YAAC,OAAD,CAAMC,GAAIC,YAAe,IAAIR,EAAL,IAAiBC,IAAzC,QAIF,YAAC,IAAD,CAASH,MAAOA,EAAOW,UAAU,MCjCxBC,UCWA,YAAsD,IAAhBzB,EAAgB,oBAEzD0B,EACN1B,EADF2B,KAAQD,QAGJb,EAAQe,YAAkBF,GAChC,OAAO,kBAAC,EAAD,eAAUb,MAAOA,GAAWb,M,2nBCDtB4B,IAZW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACxBD,EAAMtC,KAAI,SAAAwC,GAAQ,MACVC,EAASD,EAAKE,GACdC,EAAO,UAAGJ,EAAMK,MAAK,SAAAC,GACzB,OAAOA,EAAKL,KAAKE,KAAOD,YADb,aAAG,EAEZD,KACJ,cACKA,GADL,IAEEM,OAAQH,EAAQI,OAAOC,YAAYF,c,2GC2B1BG,EA5BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASjB,gBAAT,gBACnB,YAAC,IAAD,CAAKP,GAAI,GACP,YAAC,OAAD,CAAMK,GAAImB,EAAK9C,KAAMC,GAAI,CAAEY,SAAU,CAAC,EAAG,EAAG,GAAIE,MAAO,SACpD+B,EAAKC,OAER,iBACE9C,GAAI,CACFc,MAAO,YACPS,GAAI,EACJwB,EAAG,CAAEjC,MAAO,aACZF,SAAU,CAAC,EAAG,EAAG,KAGnB,wBAAOiC,EAAKG,MACX,KACD,wBAAOH,EAAKJ,QACXI,EAAKpD,MAAQmC,GACZ,8BACG,KACD,YAAC,IAAMlC,SAAP,KACE,YAAC,IAAD,CAAUD,KAAMoD,EAAKpD,YCflBwD,IARC,SAAC,GAAD,IAAGhC,EAAH,EAAGA,MAAH,IAAUiC,iBAAV,eAA0BtB,gBAA1B,gBACd,uBAAS5B,GAAI,CAAEqB,GAAI,CAAC,EAAG,EAAG,IAAM6B,UAAWA,GACxCjC,EAAMtB,KAAI,SAACkD,GAAD,OACT,YAAC,EAAD,CAAc/C,IAAK+C,EAAK9C,KAAM8C,KAAMA,EAAMjB,SAAUA","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-homepage-query-tsx-4a0b7f21d2bdc1488222.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport React from \"react\"\nimport { Tag } from \"../../../types\";\n\ntype TagsProps = {\n  tags: Tag[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const tagDelimiter = \" \";\n  const tagPrefix = \"#\";\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && tagDelimiter}\n          <span sx={{\n            opacity: \"0.7\",\n          }}>\n            {`${tagPrefix}${tag.name}`}\n          </span>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    {\n      /* Hero Section */\n    }\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  안녕하세요.\n    </Text>\n    <p>{`메쉬코리아 웹 프론트엔드 팀 블로그 입니다.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\n// @ts-ignore\n// ignore mdx import ts error\nimport Hero from \"../texts/hero\";\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\";\nimport Title from \"@lekoarts/gatsby-theme-minimal-blog/src/components/title\";\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\";\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\";\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\";\nimport { Post } from \"../../../types\";\n\ntype HomePageProps = {\n  posts: Post[]\n  [key: string]: any;\n};\n\nconst Homepage = ({ posts }: HomePageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig();\n  return (\n    <Layout>\n      <section\n        sx={{\n          mb: [4, 5, 6],\n          p: { fontSize: [1, 2, 3], mt: 2 },\n          variant: `section_hero`,\n        }}\n      >\n        <Hero />\n      </section>\n      <Title text=\"최신 글\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>\n          더보기\n        </Link>\n      </Title>\n      <Listing posts={posts} showTags={true} />\n    </Layout>\n  );\n};\n\nexport default Homepage;\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"@lekoarts/gatsby-theme-minimal-blog-core/src/components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        id\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        tags {\n          name\n          slug\n        }\n      }\n      edges {\n        node {\n          ... on MdxPost {\n            parent {\n              ... on Mdx {\n                id\n                frontmatter {\n                  author\n                }\n              }\n              id\n            }\n          }\n          id\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { AllPostNode, AllPostEdge } from \"../../../types\";\nimport getPostsFromQuery from \"../../../utils/getPostsFromQuery\";\nimport Homepage from \"../../gatsby-theme-minimal-blog/components/homepage\";\n\ntype Props = {\n  data: {\n    allPost: {\n      nodes: AllPostNode[];\n      edges: AllPostEdge[];\n    };\n  }\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  const posts = getPostsFromQuery(allPost);\n  return <Homepage posts={posts} {...props} />\n}\n","import { AllPostEdge, AllPostNode } from \"../types\";\n\ntype QueryResult = {\n  nodes: AllPostNode[];\n  edges: AllPostEdge[]\n}\n\nconst getPostsFromQuery = ({ nodes, edges }: QueryResult) => \n  nodes.map(node => {\n    const postId = node.id;\n    const mdxPost = edges.find(edge => {\n      return edge.node.id === postId;\n    })?.node;\n    return {\n      ...node,\n      author: mdxPost.parent.frontmatter.author\n    }\n  })\n\nexport default getPostsFromQuery;","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"theme-ui\";\nimport { Box } from \"@theme-ui/components\";\nimport { Link } from \"gatsby\";\nimport ItemAuthor from \"./item-author\";\nimport ItemTags from \"./item-tags\";\nimport Post from \"../../../types/Post\";\n\ntype BlogListItemProps = {\n  post: Post;\n  showTags?: boolean;\n};\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </Link>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {\", \"}\n      <span>{post.author}</span>\n      {post.tags && showTags && (\n        <>\n          {\", \"}\n          <React.Fragment>\n            <ItemTags tags={post.tags} />\n          </React.Fragment>\n        </>\n      )}\n    </p>\n  </Box>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Post } from \"../../../types\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: Post[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}