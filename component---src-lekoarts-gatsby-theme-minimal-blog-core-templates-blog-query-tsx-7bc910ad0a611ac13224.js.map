{"version":3,"sources":["webpack:///./src/utils/getPostFromQuery.ts","webpack:///./src/utils/getPostsFromQuery.ts","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/blog-query.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["getPostFromQuery","result","author","parent","frontmatter","getPostsFromQuery","nodes","edges","map","node","postId","id","mdxPost","find","edge","ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","tag","i","key","slug","sx","opacity","textDecoration","to","replaceSlashes","name","Blog","posts","title","alignItems","justifyContent","flexFlow","as","variant","marginY","mt","BlogComponent","props","allPost","data","BlogListItem","post","showTags","mb","fontSize","color","a","date","Listing","className"],"mappings":"0vBAEA,IAKeA,EALU,SAACC,GAAD,cACpBA,GADoB,IAEvBC,OAAQD,EAAOE,OAAOC,YAAYF,U,ykBCGpC,IAYeG,EAZW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACxBD,EAAME,KAAI,SAAAC,GAAQ,MACVC,EAASD,EAAKE,GACdC,EAAO,UAAGL,EAAMM,MAAK,SAAAC,GACzB,OAAOA,EAAKL,KAAKE,KAAOD,YADb,aAAG,EAEZD,KACJ,cACKA,GADL,IAEEP,QAAQU,aAAA,EAAAA,EAAST,OAAOC,YAAYF,SAAU,U,kCCfpD,yEAmCea,IAtBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTC,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAIlB,OACE,YAAC,IAAMC,SAAP,KACGJ,EAAKR,KAAI,SAACa,EAAKC,GAAN,OACR,YAAC,IAAMF,SAAP,CAAgBG,IAAKF,EAAIG,QACpBF,GANU,IAOb,YAAC,OAAD,CACEG,GAAI,CAAEC,QAAS,MAAOC,eAAgB,QACtCC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,EAAjB,IAA6BG,EAAIG,OAR3C,IAUQH,EAAIS,a,kKCkBjBC,EA5BF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACPf,cAAvBC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKc,MAAM,SACX,YAAC,IAAD,CACER,GAAI,CACFS,WAAY,SACZC,eAAgB,gBAChBC,SAAU,SAGZ,YAAC,IAAD,CAASC,GAAG,KAAKC,QAAQ,YAAYb,GAAI,CAAEc,QAAS,IAApD,QAGA,YAAC,OAAD,CACEd,GAAI,CAAEa,QAAS,kBAAmBC,QAAS,GAC3CX,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,IAFrC,UAOF,YAAC,IAAD,CAASc,MAAOA,EAAOP,GAAI,CAAEe,GAAI,CAAC,EAAG,Q,YCrC5BC,UCUA,YAAkD,IAAhBC,EAAgB,oBAErDC,EACND,EADFE,KAAQD,QAGJX,EAAQ3B,YAAkBsC,GAEhC,OAAO,kBAAC,EAAD,eAAMX,MAAOA,GAAWU,M,2GCqBlBG,EA5BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,OAAD,CAAMpB,GAAIkB,EAAKtB,KAAMC,GAAI,CAAEwB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SACpDJ,EAAKb,OAER,iBACER,GAAI,CACFyB,MAAO,YACPV,GAAI,EACJW,EAAG,CAAED,MAAO,aACZD,SAAU,CAAC,EAAG,EAAG,KAGnB,wBAAOH,EAAKM,MACX,KACD,wBAAON,EAAK5C,OAAO4B,MAClBgB,EAAK9B,MAAQ+B,GACZ,YAAC,IAAM3B,SAAP,KACG,KACD,YAAC,IAAMA,SAAP,KACE,YAAC,IAAD,CAAUJ,KAAM8B,EAAK9B,YCblBqC,IARC,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAH,IAAUsB,iBAAV,eAA0BP,gBAA1B,gBACd,uBAAStB,GAAI,CAAEuB,GAAI,CAAC,EAAG,EAAG,IAAMM,UAAWA,GACxCtB,EAAMxB,KAAI,SAACsC,GAAD,OACT,YAAC,EAAD,CAAcvB,IAAKuB,EAAKtB,KAAMsB,KAAMA,EAAMC,SAAUA","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-blog-query-tsx-7bc910ad0a611ac13224.js","sourcesContent":["import { PostDetail, PostResult } from \"types\";\n\nconst getPostFromQuery = (result: PostResult): PostDetail => ({\n  ...result,\n  author: result.parent.frontmatter.author,\n});\n\nexport default getPostFromQuery;\n","import { AllPostEdge, AllPostNode } from \"types\";\n\ntype QueryResult = {\n  nodes: AllPostNode[];\n  edges: AllPostEdge[];\n};\n\nconst getPostsFromQuery = ({ nodes, edges }: QueryResult) =>\n  nodes.map(node => {\n    const postId = node.id;\n    const mdxPost = edges.find(edge => {\n      return edge.node.id === postId;\n    })?.node;\n    return {\n      ...node,\n      author: mdxPost?.parent.frontmatter.author || \"\",\n    };\n  });\n\nexport default getPostsFromQuery;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\";\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\";\n\nimport { Tag } from \"types\";\n\ntype TagsProps = {\n  tags: Tag[];\n};\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  const tagDelimiter = \" \";\n  const tagPrefix = \"#\";\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && tagDelimiter}\n          <Link\n            sx={{ opacity: \"0.7\", textDecoration: \"none\" }}\n            to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n          >\n            {`${tagPrefix}${tag.name}`}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default ItemTags;\n","/** @jsx jsx */\nimport { jsx, Heading } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport { Flex } from \"@theme-ui/components\";\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\";\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\";\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\";\nimport SEO from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\";\n\nimport Listing from \"./listing\";\nimport { PostListItem } from \"types\";\n\ntype PostsProps = {\n  posts: PostListItem[];\n  [key: string]: any;\n};\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Flex\n        sx={{\n          alignItems: `center`,\n          justifyContent: `space-between`,\n          flexFlow: `wrap`,\n        }}\n      >\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          Blog\n        </Heading>\n        <Link\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          모든 태그\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  );\n};\n\nexport default Blog;\n","import { graphql } from \"gatsby\";\nimport BlogComponent from \"@lekoarts/gatsby-theme-minimal-blog-core/src/components/blog\";\n\nexport default BlogComponent;\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        id\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        tags {\n          name\n          slug\n        }\n      }\n      edges {\n        node {\n          ... on MdxPost {\n            parent {\n              ... on Mdx {\n                id\n                frontmatter {\n                  author {\n                    id\n                    name\n                    bio\n                    avatar {\n                      publicURL\n                    }\n                  }\n                }\n              }\n              id\n            }\n          }\n          id\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport Blog from \"@lekoarts/gatsby-theme-minimal-blog/src/components/blog\";\n\nimport { getPostsFromQuery } from \"utils\";\nimport { AllPostResult } from \"types\";\n\ntype Props = {\n  data: {\n    allPost: AllPostResult;\n  };\n  [key: string]: any;\n};\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props;\n\n  const posts = getPostsFromQuery(allPost);\n\n  return <Blog posts={posts} {...props} />;\n}\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx, Box } from \"theme-ui\";\nimport { Link } from \"gatsby\";\n\nimport ItemTags from \"./item-tags\";\nimport Post from \"types/Post\";\n\ntype BlogListItemProps = {\n  post: Post;\n  showTags?: boolean;\n};\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </Link>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {\", \"}\n      <span>{post.author.name}</span>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {\", \"}\n          <React.Fragment>\n            <ItemTags tags={post.tags} />\n          </React.Fragment>\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { PostListItem } from \"types\";\n\nimport BlogListItem from \"./blog-list-item\";\n\ntype ListingProps = {\n  posts: PostListItem[];\n  className?: string;\n  showTags?: boolean;\n};\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n);\n\nexport default Listing;\n"],"sourceRoot":""}